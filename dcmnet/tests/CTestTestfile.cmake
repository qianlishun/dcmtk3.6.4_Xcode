# CMake generated Testfile for 
# Source directory: /Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests
# Build directory: /Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/dcmnet/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_dimseDump_nullByte "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_dimseDump_nullByte" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_dimseDump_nullByte PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_dimseDump_nullByte NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_pool "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_pool" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_pool PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_pool NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_builtin_verification_support "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_builtin_verification_support" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_builtin_verification_support PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_builtin_verification_support NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_fail_on_invalid_association_configuration "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_fail_on_invalid_association_configuration" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_fail_on_invalid_association_configuration PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_fail_on_invalid_association_configuration NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_fail_on_disallowed_host "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_fail_on_disallowed_host" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_fail_on_disallowed_host PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_fail_on_disallowed_host NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_stop_after_current_association "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_stop_after_current_association" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_stop_after_current_association PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_stop_after_current_association NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_stop_after_timeout "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_stop_after_timeout" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_stop_after_timeout PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_stop_after_timeout NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_no_stop_wo_request_noblock "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_no_stop_wo_request_noblock" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_no_stop_wo_request_noblock PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_no_stop_wo_request_noblock NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_no_stop_wo_request_block "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_no_stop_wo_request_block" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_no_stop_wo_request_block PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_no_stop_wo_request_block NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_no_term_notify_without_association "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_no_term_notify_without_association" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_no_term_notify_without_association PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_no_term_notify_without_association NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dcmnet_scp_role_selection "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" "-DDCMTK_CTEST_TEST_NAME=dcmnet_scp_role_selection" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(dcmnet_scp_role_selection PROPERTIES  LABELS "dcmnet" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/dcmnet_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/dcmnet/tests/CMakeLists.txt;0;")
else()
  add_test(dcmnet_scp_role_selection NOT_AVAILABLE)
endif()
