# CMake generated Testfile for 
# Source directory: /Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests
# Build directory: /Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/ofstd/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_3 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_3" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_3 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_3 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_4 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_4" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_4 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_4 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_5 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_5" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_5 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_5 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_6 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_6" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_6 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_6 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_7 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_7" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_7 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_7 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFCharacterEncoding_8 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFCharacterEncoding_8" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFCharacterEncoding_8 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFCharacterEncoding_8 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFDate "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFDate" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFDate PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFDate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFDateTime "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFDateTime" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFDateTime PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFDateTime NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFList_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFList_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFList_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFList_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFList_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFList_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFList_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFList_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFList_splice "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFList_splice" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFList_splice PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFList_splice NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFMap "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFMap" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFMap PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFMap NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFStack "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFStack" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFStack PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFStack NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFStandard_isReadWriteable "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFStandard_isReadWriteable" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFStandard_isReadWriteable PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFStandard_isReadWriteable NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFStandard_appendFilenameExtension "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFStandard_appendFilenameExtension" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFStandard_appendFilenameExtension PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFStandard_appendFilenameExtension NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFStandard_removeRootDirFromPathname "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFStandard_removeRootDirFromPathname" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFStandard_removeRootDirFromPathname PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFStandard_removeRootDirFromPathname NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFFile "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFFile" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFFile PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFFile NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_compare "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_compare" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_compare PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_compare NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_concatenate "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_concatenate" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_concatenate PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_concatenate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_constructor "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_constructor" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_constructor PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_constructor NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_copy "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_copy" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_copy PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_copy NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_identity_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_identity_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_identity_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_identity_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_identity_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_identity_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_identity_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_identity_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_identity_3 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_identity_3" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_identity_3 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_identity_3 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_reserve "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_reserve" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_reserve PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_reserve NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFString_substr "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFString_substr" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFString_substr PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFString_substr NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFTime "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFTime" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFTime PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFTime NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFUUID_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFUUID_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFUUID_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFUUID_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFUUID_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFUUID_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFUUID_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFUUID_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_OFVector "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_OFVector" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_OFVector PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_OFVector NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_atof "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_atof" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_atof PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_atof NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_base64_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_base64_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_base64_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_base64_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_base64_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_base64_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_base64_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_base64_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_base64_3 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_base64_3" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_base64_3 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_base64_3 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_ftoa "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_ftoa" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_ftoa PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_ftoa NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_markup_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_markup_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_markup_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_markup_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_markup_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_markup_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_markup_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_markup_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_markup_3 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_markup_3" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_markup_3 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_markup_3 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_markup_4 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_markup_4" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_markup_4 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_markup_4 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_markup_5 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_markup_5" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_markup_5 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_markup_5 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_markup_6 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_markup_6" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_markup_6 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_markup_6 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_testPaths_1 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_testPaths_1" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_testPaths_1 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_testPaths_1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_testPaths_2 "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_testPaths_2" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_testPaths_2 PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_testPaths_2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_thread "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_thread" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_thread PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_thread NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_xmlParser "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_xmlParser" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_xmlParser PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_xmlParser NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_memory "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_memory" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_memory PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_memory NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_optional "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_optional" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_optional PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_optional NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_tuple "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_tuple" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_tuple PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_tuple NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_limits "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_limits" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_limits PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_limits NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_safeSubtractAddMult "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_safeSubtractAddMult" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_safeSubtractAddMult PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_safeSubtractAddMult NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_variant "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_variant" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_variant PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_variant NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_error "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_error" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_error PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_error NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_filesystem "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_filesystem" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_filesystem PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_filesystem NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ofstd_snprintf "/Applications/CMake.app/Contents/bin/cmake" "-DDCMTK_CTEST_TESTCASE_COMMAND=/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" "-DDCMTK_CTEST_TEST_NAME=ofstd_snprintf" "-P" "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/CMakeFiles/dcmtkCTestRun.cmake")
  set_tests_properties(ofstd_snprintf PROPERTIES  LABELS "ofstd" REQUIRED_FILES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/xcode/bin/Release/ofstd_tests" _BACKTRACE_TRIPLES "/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/CMake/dcmtkMacros.cmake;31;add_test;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;8;DCMTK_ADD_TESTS;/Users/mrq/Desktop/works/dcmtk/dcmtk-3.6.4/ofstd/tests/CMakeLists.txt;0;")
else()
  add_test(ofstd_snprintf NOT_AVAILABLE)
endif()
